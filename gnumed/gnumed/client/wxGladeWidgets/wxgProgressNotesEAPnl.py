# -*- coding: UTF-8 -*-
#
# generated by wxGlade
#

import wx

# begin wxGlade: dependencies
import gettext
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class wxgProgressNotesEAPnl(wx.ScrolledWindow):
	def __init__(self, *args, **kwds):
		# begin wxGlade: wxgProgressNotesEAPnl.__init__
		kwds["style"] = kwds.get("style", 0) | wx.BORDER_NONE | wx.TAB_TRAVERSAL
		wx.ScrolledWindow.__init__(self, *args, **kwds)
		self._LBL_Soap = wx.StaticText(self, wx.ID_ANY, _("Subjective"))
		from Gnumed.wxpython.gmCodingWidgets import cGenericCodesPhraseWheel
		self._PRW_Soap_codes = cGenericCodesPhraseWheel(self, wx.ID_ANY, "", style=wx.TE_READONLY)
		from Gnumed.wxpython.gmTextCtrl import cExpandoTextCtrl
		self._TCTRL_Soap = cExpandoTextCtrl(self, wx.ID_ANY, "", style=wx.TE_WORDWRAP)
		self._LBL_sOap = wx.StaticText(self, wx.ID_ANY, _("Objective"))
		self._PRW_sOap_codes = cGenericCodesPhraseWheel(self, wx.ID_ANY, "", style=wx.TE_READONLY)
		self._TCTRL_sOap = cExpandoTextCtrl(self, wx.ID_ANY, "", style=wx.TE_WORDWRAP)
		self._LBL_soAp = wx.StaticText(self, wx.ID_ANY, _("Assessment"))
		self._PRW_soAp_codes = cGenericCodesPhraseWheel(self, wx.ID_ANY, "", style=wx.TE_READONLY)
		self._TCTRL_soAp = cExpandoTextCtrl(self, wx.ID_ANY, "", style=wx.TE_WORDWRAP)
		self._LBL_soaP = wx.StaticText(self, wx.ID_ANY, _("Plan"))
		self._PRW_soaP_codes = cGenericCodesPhraseWheel(self, wx.ID_ANY, "", style=wx.TE_READONLY)
		self._TCTRL_soaP = cExpandoTextCtrl(self, wx.ID_ANY, "", style=wx.TE_WORDWRAP)
		from Gnumed.wxpython.gmSoapSTCWidgets import cSoapSTC
		self._STC_soap = cSoapSTC(self, wx.ID_ANY, "")
		from Gnumed.wxpython.gmVisualProgressNoteWidgets import cVisualSoapPresenterPnl
		self._PNL_visual_soap = cVisualSoapPresenterPnl(self, wx.ID_ANY, style=wx.BORDER_NONE)
		self._LBL_summary = wx.StaticText(self, wx.ID_ANY, _("Episode synopsis"))
		self._PRW_episode_codes = cGenericCodesPhraseWheel(self, wx.ID_ANY, "")
		self._TCTRL_episode_summary = cExpandoTextCtrl(self, wx.ID_ANY, "", style=wx.TE_WORDWRAP)

		self.__set_properties()
		self.__do_layout()
		# end wxGlade

	def __set_properties(self):
		# begin wxGlade: wxgProgressNotesEAPnl.__set_properties
		self.SetScrollRate(10, 10)
		self._PRW_Soap_codes.SetToolTip(_("Codes relevant to this Subjective\nseparated by \";\"."))
		self._PRW_Soap_codes.Enable(False)
		self._PRW_sOap_codes.SetToolTip(_("Codes relevant to this Objective\nseparated by \";\"."))
		self._PRW_sOap_codes.Enable(False)
		self._PRW_soAp_codes.SetToolTip(_("Codes relevant to this Assessment\nseparated by \";\"."))
		self._PRW_soAp_codes.Enable(False)
		self._PRW_soaP_codes.SetToolTip(_("Codes relevant to this Plan\nseparated by \";\"."))
		self._PRW_soaP_codes.Enable(False)
		self._STC_soap.Hide()
		self._PRW_episode_codes.SetToolTip(_("Codes relevant to this episode\nseparated by \";\"."))
		self._TCTRL_episode_summary.SetToolTip(_("Here you can modify the cumulative summary (status) of the episode this SOAP narrative belongs to."))
		# end wxGlade

	def __do_layout(self):
		# begin wxGlade: wxgProgressNotesEAPnl.__do_layout
		__szr_main = wx.BoxSizer(wx.VERTICAL)
		__szr_summary = wx.BoxSizer(wx.HORIZONTAL)
		__szr_soaP = wx.BoxSizer(wx.HORIZONTAL)
		__szr_soAp = wx.BoxSizer(wx.HORIZONTAL)
		__szr_sOap = wx.BoxSizer(wx.HORIZONTAL)
		__szr_Soap = wx.BoxSizer(wx.HORIZONTAL)
		__szr_Soap.Add(self._LBL_Soap, 1, wx.ALIGN_CENTER_VERTICAL, 10)
		__vline_Soap = wx.StaticLine(self, wx.ID_ANY, style=wx.LI_VERTICAL)
		__szr_Soap.Add(__vline_Soap, 0, wx.EXPAND | wx.RIGHT, 5)
		__lbl_Soap_codes = wx.StaticText(self, wx.ID_ANY, _("Codes:"))
		__lbl_Soap_codes.Hide()
		__szr_Soap.Add(__lbl_Soap_codes, 0, wx.ALIGN_CENTER_VERTICAL | wx.RIGHT, 5)
		__szr_Soap.Add(self._PRW_Soap_codes, 3, wx.ALIGN_CENTER_VERTICAL | wx.BOTTOM | wx.EXPAND | wx.TOP, 2)
		__szr_main.Add(__szr_Soap, 0, wx.EXPAND | wx.LEFT | wx.RIGHT, 3)
		__szr_main.Add(self._TCTRL_Soap, 0, wx.EXPAND | wx.LEFT | wx.RIGHT, 3)
		__szr_sOap.Add(self._LBL_sOap, 1, wx.ALIGN_CENTER_VERTICAL, 5)
		__vline_sOap = wx.StaticLine(self, wx.ID_ANY, style=wx.LI_VERTICAL)
		__szr_sOap.Add(__vline_sOap, 0, wx.EXPAND | wx.RIGHT, 5)
		__lbl_sOap_codes = wx.StaticText(self, wx.ID_ANY, _("Codes:"))
		__lbl_sOap_codes.Hide()
		__szr_sOap.Add(__lbl_sOap_codes, 0, wx.ALIGN_CENTER_VERTICAL | wx.RIGHT, 5)
		__szr_sOap.Add(self._PRW_sOap_codes, 3, wx.ALIGN_CENTER_VERTICAL | wx.BOTTOM | wx.EXPAND | wx.TOP, 2)
		__szr_main.Add(__szr_sOap, 0, wx.EXPAND | wx.LEFT | wx.RIGHT, 3)
		__szr_main.Add(self._TCTRL_sOap, 0, wx.EXPAND | wx.LEFT | wx.RIGHT, 3)
		__szr_soAp.Add(self._LBL_soAp, 1, wx.ALIGN_CENTER_VERTICAL, 5)
		__vline_soAp = wx.StaticLine(self, wx.ID_ANY, style=wx.LI_VERTICAL)
		__szr_soAp.Add(__vline_soAp, 0, wx.EXPAND | wx.RIGHT, 5)
		__lbl_soAp_codes = wx.StaticText(self, wx.ID_ANY, _("Codes:"))
		__lbl_soAp_codes.Hide()
		__szr_soAp.Add(__lbl_soAp_codes, 0, wx.ALIGN_CENTER_VERTICAL | wx.RIGHT, 5)
		__szr_soAp.Add(self._PRW_soAp_codes, 3, wx.ALIGN_CENTER_VERTICAL | wx.BOTTOM | wx.EXPAND | wx.TOP, 2)
		__szr_main.Add(__szr_soAp, 0, wx.EXPAND | wx.LEFT | wx.RIGHT, 3)
		__szr_main.Add(self._TCTRL_soAp, 0, wx.EXPAND | wx.LEFT | wx.RIGHT, 3)
		__szr_soaP.Add(self._LBL_soaP, 1, wx.ALIGN_CENTER_VERTICAL, 5)
		__vline_soaP = wx.StaticLine(self, wx.ID_ANY, style=wx.LI_VERTICAL)
		__szr_soaP.Add(__vline_soaP, 0, wx.EXPAND | wx.RIGHT, 5)
		__lbl_soaP_codes = wx.StaticText(self, wx.ID_ANY, _("Codes:"))
		__lbl_soaP_codes.Hide()
		__szr_soaP.Add(__lbl_soaP_codes, 0, wx.ALIGN_CENTER_VERTICAL | wx.RIGHT, 5)
		__szr_soaP.Add(self._PRW_soaP_codes, 3, wx.ALIGN_CENTER_VERTICAL | wx.BOTTOM | wx.EXPAND | wx.TOP, 2)
		__szr_main.Add(__szr_soaP, 0, wx.EXPAND | wx.LEFT | wx.RIGHT, 3)
		__szr_main.Add(self._TCTRL_soaP, 0, wx.BOTTOM | wx.EXPAND | wx.LEFT | wx.RIGHT, 3)
		__szr_main.Add(self._STC_soap, 1, wx.ALL | wx.EXPAND, 3)
		__szr_main.Add(self._PNL_visual_soap, 0, wx.EXPAND, 0)
		_hline_above_summary = wx.StaticLine(self, wx.ID_ANY)
		__szr_main.Add(_hline_above_summary, 0, wx.EXPAND | wx.LEFT | wx.RIGHT | wx.TOP, 5)
		__szr_summary.Add(self._LBL_summary, 1, wx.ALIGN_CENTER_VERTICAL, 5)
		__vline_summary = wx.StaticLine(self, wx.ID_ANY, style=wx.LI_VERTICAL)
		__szr_summary.Add(__vline_summary, 0, wx.EXPAND | wx.RIGHT, 5)
		__lbl_summary_codes = wx.StaticText(self, wx.ID_ANY, _("Codes:"))
		__szr_summary.Add(__lbl_summary_codes, 0, wx.ALIGN_CENTER_VERTICAL | wx.RIGHT, 5)
		__szr_summary.Add(self._PRW_episode_codes, 3, wx.ALIGN_CENTER_VERTICAL | wx.BOTTOM | wx.EXPAND | wx.TOP, 2)
		__szr_main.Add(__szr_summary, 0, wx.EXPAND | wx.LEFT | wx.RIGHT, 3)
		__szr_main.Add(self._TCTRL_episode_summary, 0, wx.BOTTOM | wx.EXPAND | wx.LEFT | wx.RIGHT, 3)
		self.SetSizer(__szr_main)
		__szr_main.Fit(self)
		self.Layout()
		# end wxGlade

# end of class wxgProgressNotesEAPnl
