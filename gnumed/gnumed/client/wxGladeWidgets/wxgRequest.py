#!/usr/bin/env python
# -*- coding: UTF-8 -*-
# generated by wxGlade 0.4cvs on Sat Dec  3 16:15:53 2005

import wx

from Gnumed.wxpython import gmPhraseWheel


class wxgRequest(wx.Dialog):
    def __init__(self, *args, **kwds):
        # begin wxGlade: wxgRequest.__init__
        kwds["style"] = wx.DEFAULT_DIALOG_STYLE
        wx.Dialog.__init__(self, *args, **kwds)
        self.label_1 = wx.StaticText(self, -1, _("To"))
        self.lab = gmPhraseWheel.cPhraseWheel(self, -1, "")
        self.label_5 = wx.StaticText(self, -1, _("Form"))
        self.form = wx.Choice(self, -1, choices=[])
        self.label_2 = wx.StaticText(self, -1, _("Request"))
        self.request = wx.TextCtrl(self, -1, "", style=wx.TE_PROCESS_ENTER|wx.TE_MULTILINE|wx.TE_WORDWRAP|wx.NO_BORDER)
        self.label_3 = wx.StaticText(self, -1, _("Clinical Notes"))
        self.clinical_notes = wx.TextCtrl(self, -1, "", style=wx.TE_PROCESS_ENTER|wx.TE_MULTILINE|wx.TE_WORDWRAP|wx.NO_BORDER)
        self.label_4 = wx.StaticText(self, -1, _("Instructions"))
        self.patient_instructions = wx.TextCtrl(self, -1, "", style=wx.TE_MULTILINE|wx.TE_READONLY|wx.TE_WORDWRAP)
        self.urgent = wx.CheckBox(self, -1, _("Urgent"))
        self.with_sample = wx.CheckBox(self, -1, _("With Sample"))
        self.print_btn = wx.Button(self, -1, _("Print"))
        self.close_btn = wx.Button(self, -1, _("Close"))
        self.cancel_btn = wx.Button(self, -1, _("Cancel"))

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.OnPrint, self.print_btn)
        self.Bind(wx.EVT_BUTTON, self.OnClose, self.close_btn)
        self.Bind(wx.EVT_BUTTON, self.OnCancel, self.cancel_btn)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: wxgRequest.__set_properties
        self.SetTitle(_("Request"))
        self.form.SetSelection(0)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: wxgRequest.__do_layout
        grid_sizer_1 = wx.FlexGridSizer(7, 2, 0, 0)
        sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_1 = wx.BoxSizer(wx.HORIZONTAL)
        grid_sizer_1.Add(self.label_1, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.lab, 0, wx.EXPAND|wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.label_5, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.form, 0, wx.EXPAND|wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.label_2, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.request, 0, wx.EXPAND|wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.label_3, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.clinical_notes, 0, wx.EXPAND|wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.label_4, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.patient_instructions, 0, wx.EXPAND|wx.ADJUST_MINSIZE, 0)
        sizer_1.Add(self.urgent, 0, wx.ADJUST_MINSIZE, 0)
        sizer_1.Add(self.with_sample, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(sizer_1, 1, wx.EXPAND, 0)
        sizer_2.Add(self.print_btn, 0, wx.RIGHT|wx.ADJUST_MINSIZE, 30)
        sizer_2.Add(self.close_btn, 0, wx.RIGHT|wx.ADJUST_MINSIZE, 30)
        sizer_2.Add(self.cancel_btn, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(sizer_2, 1, wx.EXPAND, 0)
        self.SetAutoLayout(True)
        self.SetSizer(grid_sizer_1)
        grid_sizer_1.Fit(self)
        grid_sizer_1.SetSizeHints(self)
        grid_sizer_1.AddGrowableRow(2)
        grid_sizer_1.AddGrowableRow(3)
        grid_sizer_1.AddGrowableRow(4)
        grid_sizer_1.AddGrowableCol(1)
        self.Layout()
        # end wxGlade

    def OnPrint(self, event): # wxGlade: wxgRequest.<event_handler>
        print "Event handler `OnPrint' not implemented!"
        event.Skip()

    def OnClose(self, event): # wxGlade: wxgRequest.<event_handler>
        print "Event handler `OnClose' not implemented!"
        event.Skip()

    def OnCancel(self, event): # wxGlade: wxgRequest.<event_handler>
        print "Event handler `OnCancel' not implemented!"
        event.Skip()

# end of class wxgRequest


if __name__ == "__main__":
    import gettext
    gettext.install("app") # replace with the appropriate catalog name

    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    request = wxTextCtrl(None, -1, "")
    app.SetTopWindow(request)
    request.Show()
    app.MainLoop()
