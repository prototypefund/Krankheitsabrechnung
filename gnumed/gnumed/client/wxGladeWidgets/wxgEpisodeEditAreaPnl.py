# -*- coding: UTF-8 -*-
#
# generated by wxGlade
#

import wx

# begin wxGlade: dependencies
import gettext
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class wxgEpisodeEditAreaPnl(wx.ScrolledWindow):
	def __init__(self, *args, **kwds):
		# begin wxGlade: wxgEpisodeEditAreaPnl.__init__
		kwds["style"] = kwds.get("style", 0) | wx.BORDER_NONE | wx.TAB_TRAVERSAL
		wx.ScrolledWindow.__init__(self, *args, **kwds)
		self._TCTRL_patient = wx.TextCtrl(self, wx.ID_ANY, "")
		from Gnumed.wxpython.gmEMRStructWidgets import cIssueSelectionPhraseWheel
		self._PRW_issue = cIssueSelectionPhraseWheel(self, wx.ID_ANY, "")
		from Gnumed.wxpython.gmEMRStructWidgets import cEpisodeDescriptionPhraseWheel
		self._PRW_description = cEpisodeDescriptionPhraseWheel(self, wx.ID_ANY, "")
		from Gnumed.wxpython.gmEMRStructWidgets import cDiagnosticCertaintyClassificationPhraseWheel
		self._PRW_certainty = cDiagnosticCertaintyClassificationPhraseWheel(self, wx.ID_ANY, "")
		self._CHBOX_closed = wx.CheckBox(self, wx.ID_ANY, _("Closed"))
		self._TCTRL_status = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.TE_MULTILINE)
		from Gnumed.wxpython.gmCodingWidgets import cGenericCodesPhraseWheel
		self._PRW_codes = cGenericCodesPhraseWheel(self, wx.ID_ANY, "")

		self.__set_properties()
		self.__do_layout()
		# end wxGlade

	def __set_properties(self):
		# begin wxGlade: wxgEpisodeEditAreaPnl.__set_properties
		self.SetScrollRate(10, 10)
		self._TCTRL_patient.SetBackgroundColour(wx.SystemSettings.GetColour(wx.SYS_COLOUR_BACKGROUND))
		self._PRW_issue.SetToolTip(_("Select the health issue this episode belongs to.\n\nEpisode remains unassociated if this field is left blank."))
		self._PRW_description.SetToolTip(_("Type or select the description for this episode. It should be a summary for the episode of illness."))
		self._PRW_certainty.SetToolTip(_("The diagnostic classification or grading of this episode.\n\nThis documents how certain one is about this episode being a true diagnosis."))
		self._CHBOX_closed.SetToolTip(_("If this box is checked the episode is over. If not it is currently ongoing."))
		self._TCTRL_status.SetToolTip(_("A summary of the state of this episode."))
		self._PRW_codes.SetToolTip(_("Codes relevant to this episode\nseparated by \";\"."))
		# end wxGlade

	def __do_layout(self):
		# begin wxGlade: wxgEpisodeEditAreaPnl.__do_layout
		__szr_main = wx.BoxSizer(wx.VERTICAL)
		__gzsr_details = wx.FlexGridSizer(6, 2, 3, 5)
		__szr_status = wx.BoxSizer(wx.HORIZONTAL)
		__lbl_patient = wx.StaticText(self, wx.ID_ANY, _("Patient"))
		__gzsr_details.Add(__lbl_patient, 0, wx.ALIGN_CENTER_VERTICAL, 0)
		__gzsr_details.Add(self._TCTRL_patient, 0, wx.ALIGN_CENTER_VERTICAL | wx.EXPAND, 0)
		__lbl_issue = wx.StaticText(self, wx.ID_ANY, _("Nest under"))
		__gzsr_details.Add(__lbl_issue, 0, wx.ALIGN_CENTER_VERTICAL, 0)
		__gzsr_details.Add(self._PRW_issue, 0, wx.ALIGN_CENTER_VERTICAL | wx.EXPAND, 0)
		__lbl_description = wx.StaticText(self, wx.ID_ANY, _("Description"))
		__lbl_description.SetForegroundColour(wx.Colour(255, 0, 0))
		__gzsr_details.Add(__lbl_description, 0, wx.ALIGN_CENTER_VERTICAL, 0)
		__gzsr_details.Add(self._PRW_description, 0, wx.ALIGN_CENTER_VERTICAL | wx.EXPAND, 0)
		__lbl_certainty = wx.StaticText(self, wx.ID_ANY, _("Certainty"))
		__gzsr_details.Add(__lbl_certainty, 0, wx.ALIGN_CENTER_VERTICAL, 0)
		__szr_status.Add(self._PRW_certainty, 1, wx.ALIGN_CENTER_VERTICAL | wx.RIGHT, 15)
		__szr_status.Add(self._CHBOX_closed, 0, wx.ALIGN_CENTER_VERTICAL, 0)
		__gzsr_details.Add(__szr_status, 1, wx.ALIGN_CENTER_VERTICAL | wx.EXPAND, 0)
		__lbl_status = wx.StaticText(self, wx.ID_ANY, _("Synopsis"))
		__gzsr_details.Add(__lbl_status, 0, wx.ALIGN_CENTER_VERTICAL, 0)
		__gzsr_details.Add(self._TCTRL_status, 0, wx.ALIGN_CENTER_VERTICAL | wx.EXPAND, 0)
		__lbl_codes = wx.StaticText(self, wx.ID_ANY, _("Codes"))
		__gzsr_details.Add(__lbl_codes, 0, wx.ALIGN_CENTER_VERTICAL, 0)
		__gzsr_details.Add(self._PRW_codes, 0, wx.ALIGN_CENTER_VERTICAL | wx.EXPAND, 0)
		__gzsr_details.AddGrowableCol(1)
		__szr_main.Add(__gzsr_details, 1, wx.EXPAND, 0)
		self.SetSizer(__szr_main)
		__szr_main.Fit(self)
		self.Layout()
		# end wxGlade

# end of class wxgEpisodeEditAreaPnl
