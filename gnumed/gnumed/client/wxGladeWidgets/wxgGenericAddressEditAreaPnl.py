# -*- coding: UTF-8 -*-
#
# generated by wxGlade
#

import wx

# begin wxGlade: dependencies
import gettext
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class wxgGenericAddressEditAreaPnl(wx.ScrolledWindow):
	def __init__(self, *args, **kwds):
		# begin wxGlade: wxgGenericAddressEditAreaPnl.__init__
		kwds["style"] = kwds.get("style", 0) | wx.BORDER_NONE | wx.TAB_TRAVERSAL
		wx.ScrolledWindow.__init__(self, *args, **kwds)
		self._LBL_type = wx.StaticText(self, wx.ID_ANY, _("Type"))
		from Gnumed.wxpython.gmAddressWidgets import cAddressTypePhraseWheel
		self._PRW_type = cAddressTypePhraseWheel(self, wx.ID_ANY, "")
		self._LBL_search = wx.StaticText(self, wx.ID_ANY, _("Search"))
		from Gnumed.wxpython.gmAddressWidgets import cAddressPhraseWheel
		self._PRW_address_searcher = cAddressPhraseWheel(self, wx.ID_ANY, "")
		from Gnumed.wxpython.gmAddressWidgets import cZipcodePhraseWheel
		self._PRW_zip = cZipcodePhraseWheel(self, wx.ID_ANY, "")
		from Gnumed.wxpython.gmAddressWidgets import cStreetPhraseWheel
		self._PRW_street = cStreetPhraseWheel(self, wx.ID_ANY, "")
		self._TCTRL_notes_street = wx.TextCtrl(self, wx.ID_ANY, "")
		self._TCTRL_number = wx.TextCtrl(self, wx.ID_ANY, "")
		self._TCTRL_subunit = wx.TextCtrl(self, wx.ID_ANY, "")
		from Gnumed.wxpython.gmAddressWidgets import cUrbPhraseWheel
		self._PRW_urb = cUrbPhraseWheel(self, wx.ID_ANY, "")
		from Gnumed.wxpython.gmAddressWidgets import cSuburbPhraseWheel
		self._PRW_suburb = cSuburbPhraseWheel(self, wx.ID_ANY, "")
		from Gnumed.wxpython.gmAddressWidgets import cStateSelectionPhraseWheel
		self._PRW_state = cStateSelectionPhraseWheel(self, wx.ID_ANY, "")
		from Gnumed.wxpython.gmAddressWidgets import cCountryPhraseWheel
		self._PRW_country = cCountryPhraseWheel(self, wx.ID_ANY, "")
		self._TCTRL_notes_subunit = wx.TextCtrl(self, wx.ID_ANY, "")

		self.__set_properties()
		self.__do_layout()
		# end wxGlade

	def __set_properties(self):
		# begin wxGlade: wxgGenericAddressEditAreaPnl.__set_properties
		self.SetToolTip(_("Select the type of address here."))
		self.SetScrollRate(10, 10)
		self._LBL_type.SetForegroundColour(wx.Colour(255, 0, 0))
		self._PRW_type.SetToolTip(_("The category under which to store this address."))
		self._PRW_address_searcher.SetToolTip(_("Here you can enter a postal code or street name fragment to search for an existing address.\n\nThe fields below will be filled with the details of that address which you can edit to create a new address.\n\nYou can also just enter the relevant information into the corresponding fields without searching for an existing address."))
		self._TCTRL_notes_street.SetToolTip(_("Enter any additional street level instructions and notes, such as postal box or driving directions."))
		self._TCTRL_number.SetToolTip(_("Enter the house number for this address."))
		self._TCTRL_subunit.SetToolTip(_("Enter the subunit / apartment / room / level / entrance for this address."))
		self._TCTRL_notes_subunit.SetToolTip(_("Enter any additional notes and comments on this address which didn't fit anywhere else."))
		# end wxGlade

	def __do_layout(self):
		# begin wxGlade: wxgGenericAddressEditAreaPnl.__do_layout
		_gszr_main = wx.FlexGridSizer(10, 2, 3, 5)
		__szr_urb = wx.BoxSizer(wx.HORIZONTAL)
		_szr_number = wx.BoxSizer(wx.HORIZONTAL)
		_gszr_main.Add(self._LBL_type, 0, wx.ALIGN_CENTER_VERTICAL, 0)
		_gszr_main.Add(self._PRW_type, 1, wx.ALIGN_CENTER_VERTICAL | wx.EXPAND, 0)
		_gszr_main.Add(self._LBL_search, 0, wx.ALIGN_CENTER_VERTICAL, 0)
		_gszr_main.Add(self._PRW_address_searcher, 0, wx.ALIGN_CENTER_VERTICAL | wx.EXPAND, 0)
		__LBL_zip = wx.StaticText(self, wx.ID_ANY, _("Zip code"))
		__LBL_zip.SetForegroundColour(wx.Colour(255, 0, 0))
		_gszr_main.Add(__LBL_zip, 0, wx.ALIGN_CENTER_VERTICAL, 0)
		_gszr_main.Add(self._PRW_zip, 1, wx.ALIGN_CENTER_VERTICAL | wx.EXPAND, 0)
		__LBL_street = wx.StaticText(self, wx.ID_ANY, _("Street"))
		__LBL_street.SetForegroundColour(wx.Colour(255, 0, 0))
		_gszr_main.Add(__LBL_street, 0, wx.ALIGN_CENTER_VERTICAL, 0)
		_gszr_main.Add(self._PRW_street, 1, wx.ALIGN_CENTER_VERTICAL | wx.EXPAND, 0)
		__LBL_street_notes = wx.StaticText(self, wx.ID_ANY, _("... Notes"), style=wx.ALIGN_RIGHT)
		_gszr_main.Add(__LBL_street_notes, 0, wx.ALIGN_CENTER_VERTICAL, 0)
		_gszr_main.Add(self._TCTRL_notes_street, 1, wx.ALIGN_CENTER_VERTICAL | wx.EXPAND, 0)
		__LBL_number = wx.StaticText(self, wx.ID_ANY, _("Number"))
		__LBL_number.SetForegroundColour(wx.Colour(255, 0, 0))
		_gszr_main.Add(__LBL_number, 0, wx.ALIGN_CENTER_VERTICAL, 0)
		_szr_number.Add(self._TCTRL_number, 1, wx.ALIGN_CENTER_VERTICAL | wx.EXPAND, 0)
		__LBL_subunit = wx.StaticText(self, wx.ID_ANY, _("Unit:"))
		_szr_number.Add(__LBL_subunit, 0, wx.ALIGN_CENTER_VERTICAL | wx.LEFT | wx.RIGHT, 5)
		_szr_number.Add(self._TCTRL_subunit, 1, wx.ALIGN_CENTER_VERTICAL | wx.EXPAND, 0)
		_gszr_main.Add(_szr_number, 1, wx.EXPAND, 0)
		__LBL_urb = wx.StaticText(self, wx.ID_ANY, _("Community"))
		__LBL_urb.SetForegroundColour(wx.Colour(255, 0, 0))
		_gszr_main.Add(__LBL_urb, 0, wx.ALIGN_CENTER_VERTICAL, 0)
		__szr_urb.Add(self._PRW_urb, 1, wx.ALIGN_CENTER_VERTICAL | wx.EXPAND, 0)
		__LBL_suburb = wx.StaticText(self, wx.ID_ANY, _("Suburb:"))
		__szr_urb.Add(__LBL_suburb, 0, wx.ALIGN_CENTER_VERTICAL | wx.LEFT | wx.RIGHT, 5)
		__szr_urb.Add(self._PRW_suburb, 1, wx.ALIGN_CENTER_VERTICAL | wx.EXPAND, 0)
		_gszr_main.Add(__szr_urb, 1, wx.EXPAND, 0)
		__LBL_state = wx.StaticText(self, wx.ID_ANY, _("Region"))
		__LBL_state.SetForegroundColour(wx.Colour(255, 0, 0))
		_gszr_main.Add(__LBL_state, 0, wx.ALIGN_CENTER_VERTICAL, 0)
		_gszr_main.Add(self._PRW_state, 1, wx.ALIGN_CENTER_VERTICAL | wx.EXPAND, 0)
		__LBL_country = wx.StaticText(self, wx.ID_ANY, _("Country"))
		__LBL_country.SetForegroundColour(wx.Colour(255, 0, 0))
		_gszr_main.Add(__LBL_country, 0, wx.ALIGN_CENTER_VERTICAL, 0)
		_gszr_main.Add(self._PRW_country, 1, wx.ALIGN_CENTER_VERTICAL | wx.EXPAND, 0)
		__LBL_notes_subunit = wx.StaticText(self, wx.ID_ANY, _("Comment"))
		_gszr_main.Add(__LBL_notes_subunit, 0, wx.ALIGN_CENTER_VERTICAL, 0)
		_gszr_main.Add(self._TCTRL_notes_subunit, 1, wx.ALIGN_CENTER_VERTICAL | wx.EXPAND, 0)
		self.SetSizer(_gszr_main)
		_gszr_main.Fit(self)
		_gszr_main.AddGrowableCol(1)
		self.Layout()
		# end wxGlade

# end of class wxgGenericAddressEditAreaPnl
