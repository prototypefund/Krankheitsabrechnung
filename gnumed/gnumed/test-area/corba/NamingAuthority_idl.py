# Python stubs generated by omniidl from NamingAuthority.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(2,0, __file__)


#
# Start of module "NamingAuthority"
#
__name__ = "NamingAuthority"
_0_NamingAuthority = omniORB.openModule("NamingAuthority", r"NamingAuthority.idl")
_0_NamingAuthority__POA = omniORB.openModule("NamingAuthority__POA", r"NamingAuthority.idl")


# enum RegistrationAuthority
_0_NamingAuthority.OTHER = omniORB.EnumItem("OTHER", 0)
_0_NamingAuthority.ISO = omniORB.EnumItem("ISO", 1)
_0_NamingAuthority.DNS = omniORB.EnumItem("DNS", 2)
_0_NamingAuthority.IDL = omniORB.EnumItem("IDL", 3)
_0_NamingAuthority.DCE = omniORB.EnumItem("DCE", 4)
_0_NamingAuthority.RegistrationAuthority = omniORB.Enum("IDL:omg.org/NamingAuthority/RegistrationAuthority:1.0", (_0_NamingAuthority.OTHER, _0_NamingAuthority.ISO, _0_NamingAuthority.DNS, _0_NamingAuthority.IDL, _0_NamingAuthority.DCE,))

_0_NamingAuthority._d_RegistrationAuthority  = (omniORB.tcInternal.tv_enum, _0_NamingAuthority.RegistrationAuthority._NP_RepositoryId, "RegistrationAuthority", _0_NamingAuthority.RegistrationAuthority._items)
_0_NamingAuthority._tc_RegistrationAuthority = omniORB.tcInternal.createTypeCode(_0_NamingAuthority._d_RegistrationAuthority)
omniORB.registerType(_0_NamingAuthority.RegistrationAuthority._NP_RepositoryId, _0_NamingAuthority._d_RegistrationAuthority, _0_NamingAuthority._tc_RegistrationAuthority)

# typedef ... NamingEntity
class NamingEntity:
    _NP_RepositoryId = "IDL:omg.org/NamingAuthority/NamingEntity:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_NamingAuthority.NamingEntity = NamingEntity
_0_NamingAuthority._d_NamingEntity  = (omniORB.tcInternal.tv_string,0)
_0_NamingAuthority._ad_NamingEntity = (omniORB.tcInternal.tv_alias, NamingEntity._NP_RepositoryId, "NamingEntity", (omniORB.tcInternal.tv_string,0))
_0_NamingAuthority._tc_NamingEntity = omniORB.tcInternal.createTypeCode(_0_NamingAuthority._ad_NamingEntity)
omniORB.registerType(NamingEntity._NP_RepositoryId, _0_NamingAuthority._ad_NamingEntity, _0_NamingAuthority._tc_NamingEntity)
del NamingEntity

# struct AuthorityId
_0_NamingAuthority.AuthorityId = omniORB.newEmptyClass()
class AuthorityId:
    _NP_RepositoryId = "IDL:omg.org/NamingAuthority/AuthorityId:1.0"

    def __init__(self, authority, naming_entity):
        self.authority = authority
        self.naming_entity = naming_entity

_0_NamingAuthority.AuthorityId = AuthorityId
_0_NamingAuthority._d_AuthorityId  = (omniORB.tcInternal.tv_struct, AuthorityId, AuthorityId._NP_RepositoryId, "AuthorityId", "authority", omniORB.typeMapping["IDL:omg.org/NamingAuthority/RegistrationAuthority:1.0"], "naming_entity", omniORB.typeMapping["IDL:omg.org/NamingAuthority/NamingEntity:1.0"])
_0_NamingAuthority._tc_AuthorityId = omniORB.tcInternal.createTypeCode(_0_NamingAuthority._d_AuthorityId)
omniORB.registerType(AuthorityId._NP_RepositoryId, _0_NamingAuthority._d_AuthorityId, _0_NamingAuthority._tc_AuthorityId)
del AuthorityId

# typedef ... AuthorityIdStr
class AuthorityIdStr:
    _NP_RepositoryId = "IDL:omg.org/NamingAuthority/AuthorityIdStr:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_NamingAuthority.AuthorityIdStr = AuthorityIdStr
_0_NamingAuthority._d_AuthorityIdStr  = (omniORB.tcInternal.tv_string,0)
_0_NamingAuthority._ad_AuthorityIdStr = (omniORB.tcInternal.tv_alias, AuthorityIdStr._NP_RepositoryId, "AuthorityIdStr", (omniORB.tcInternal.tv_string,0))
_0_NamingAuthority._tc_AuthorityIdStr = omniORB.tcInternal.createTypeCode(_0_NamingAuthority._ad_AuthorityIdStr)
omniORB.registerType(AuthorityIdStr._NP_RepositoryId, _0_NamingAuthority._ad_AuthorityIdStr, _0_NamingAuthority._tc_AuthorityIdStr)
del AuthorityIdStr

# typedef ... LocalName
class LocalName:
    _NP_RepositoryId = "IDL:omg.org/NamingAuthority/LocalName:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_NamingAuthority.LocalName = LocalName
_0_NamingAuthority._d_LocalName  = (omniORB.tcInternal.tv_string,0)
_0_NamingAuthority._ad_LocalName = (omniORB.tcInternal.tv_alias, LocalName._NP_RepositoryId, "LocalName", (omniORB.tcInternal.tv_string,0))
_0_NamingAuthority._tc_LocalName = omniORB.tcInternal.createTypeCode(_0_NamingAuthority._ad_LocalName)
omniORB.registerType(LocalName._NP_RepositoryId, _0_NamingAuthority._ad_LocalName, _0_NamingAuthority._tc_LocalName)
del LocalName

# struct QualifiedName
_0_NamingAuthority.QualifiedName = omniORB.newEmptyClass()
class QualifiedName:
    _NP_RepositoryId = "IDL:omg.org/NamingAuthority/QualifiedName:1.0"

    def __init__(self, authority_id, local_name):
        self.authority_id = authority_id
        self.local_name = local_name

_0_NamingAuthority.QualifiedName = QualifiedName
_0_NamingAuthority._d_QualifiedName  = (omniORB.tcInternal.tv_struct, QualifiedName, QualifiedName._NP_RepositoryId, "QualifiedName", "authority_id", omniORB.typeMapping["IDL:omg.org/NamingAuthority/AuthorityId:1.0"], "local_name", omniORB.typeMapping["IDL:omg.org/NamingAuthority/LocalName:1.0"])
_0_NamingAuthority._tc_QualifiedName = omniORB.tcInternal.createTypeCode(_0_NamingAuthority._d_QualifiedName)
omniORB.registerType(QualifiedName._NP_RepositoryId, _0_NamingAuthority._d_QualifiedName, _0_NamingAuthority._tc_QualifiedName)
del QualifiedName

# typedef ... QualifiedNameStr
class QualifiedNameStr:
    _NP_RepositoryId = "IDL:omg.org/NamingAuthority/QualifiedNameStr:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_NamingAuthority.QualifiedNameStr = QualifiedNameStr
_0_NamingAuthority._d_QualifiedNameStr  = (omniORB.tcInternal.tv_string,0)
_0_NamingAuthority._ad_QualifiedNameStr = (omniORB.tcInternal.tv_alias, QualifiedNameStr._NP_RepositoryId, "QualifiedNameStr", (omniORB.tcInternal.tv_string,0))
_0_NamingAuthority._tc_QualifiedNameStr = omniORB.tcInternal.createTypeCode(_0_NamingAuthority._ad_QualifiedNameStr)
omniORB.registerType(QualifiedNameStr._NP_RepositoryId, _0_NamingAuthority._ad_QualifiedNameStr, _0_NamingAuthority._tc_QualifiedNameStr)
del QualifiedNameStr

# exception InvalidInput
_0_NamingAuthority.InvalidInput = omniORB.newEmptyClass()
class InvalidInput (CORBA.UserException):
    _NP_RepositoryId = "IDL:omg.org/NamingAuthority/InvalidInput:1.0"


_0_NamingAuthority.InvalidInput = InvalidInput
_0_NamingAuthority._d_InvalidInput  = (omniORB.tcInternal.tv_except, InvalidInput, InvalidInput._NP_RepositoryId, "InvalidInput")
_0_NamingAuthority._tc_InvalidInput = omniORB.tcInternal.createTypeCode(_0_NamingAuthority._d_InvalidInput)
omniORB.registerType(InvalidInput._NP_RepositoryId, _0_NamingAuthority._d_InvalidInput, _0_NamingAuthority._tc_InvalidInput)
del InvalidInput

# interface translation_library
_0_NamingAuthority._d_translation_library = (omniORB.tcInternal.tv_objref, "IDL:omg.org/NamingAuthority/translation_library:1.0", "translation_library")
omniORB.typeMapping["IDL:omg.org/NamingAuthority/translation_library:1.0"] = _0_NamingAuthority._d_translation_library
_0_NamingAuthority.translation_library = omniORB.newEmptyClass()
class translation_library :
    _NP_RepositoryId = _0_NamingAuthority._d_translation_library[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_NamingAuthority.translation_library = translation_library
_0_NamingAuthority._tc_translation_library = omniORB.tcInternal.createTypeCode(_0_NamingAuthority._d_translation_library)
omniORB.registerType(translation_library._NP_RepositoryId, _0_NamingAuthority._d_translation_library, _0_NamingAuthority._tc_translation_library)

# translation_library operations and attributes
translation_library._d_authority_to_str = ((omniORB.typeMapping["IDL:omg.org/NamingAuthority/AuthorityId:1.0"], ), (omniORB.typeMapping["IDL:omg.org/NamingAuthority/AuthorityIdStr:1.0"], ), {_0_NamingAuthority.InvalidInput._NP_RepositoryId: _0_NamingAuthority._d_InvalidInput})
translation_library._d_str_to_authority = ((omniORB.typeMapping["IDL:omg.org/NamingAuthority/AuthorityIdStr:1.0"], ), (omniORB.typeMapping["IDL:omg.org/NamingAuthority/AuthorityId:1.0"], ), {_0_NamingAuthority.InvalidInput._NP_RepositoryId: _0_NamingAuthority._d_InvalidInput})
translation_library._d_qualified_name_to_str = ((omniORB.typeMapping["IDL:omg.org/NamingAuthority/QualifiedName:1.0"], ), (omniORB.typeMapping["IDL:omg.org/NamingAuthority/QualifiedNameStr:1.0"], ), {_0_NamingAuthority.InvalidInput._NP_RepositoryId: _0_NamingAuthority._d_InvalidInput})
translation_library._d_str_to_qualified_name = ((omniORB.typeMapping["IDL:omg.org/NamingAuthority/QualifiedNameStr:1.0"], ), (omniORB.typeMapping["IDL:omg.org/NamingAuthority/QualifiedName:1.0"], ), {_0_NamingAuthority.InvalidInput._NP_RepositoryId: _0_NamingAuthority._d_InvalidInput})

# translation_library object reference
class _objref_translation_library (CORBA.Object):
    _NP_RepositoryId = translation_library._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def authority_to_str(self, *args):
        return _omnipy.invoke(self, "authority_to_str", _0_NamingAuthority.translation_library._d_authority_to_str, args)

    def str_to_authority(self, *args):
        return _omnipy.invoke(self, "str_to_authority", _0_NamingAuthority.translation_library._d_str_to_authority, args)

    def qualified_name_to_str(self, *args):
        return _omnipy.invoke(self, "qualified_name_to_str", _0_NamingAuthority.translation_library._d_qualified_name_to_str, args)

    def str_to_qualified_name(self, *args):
        return _omnipy.invoke(self, "str_to_qualified_name", _0_NamingAuthority.translation_library._d_str_to_qualified_name, args)

    __methods__ = ["authority_to_str", "str_to_authority", "qualified_name_to_str", "str_to_qualified_name"] + CORBA.Object.__methods__

omniORB.registerObjref(translation_library._NP_RepositoryId, _objref_translation_library)
_0_NamingAuthority._objref_translation_library = _objref_translation_library
del translation_library, _objref_translation_library

# translation_library skeleton
__name__ = "NamingAuthority__POA"
class translation_library (PortableServer.Servant):
    _NP_RepositoryId = _0_NamingAuthority.translation_library._NP_RepositoryId


    _omni_op_d = {"authority_to_str": _0_NamingAuthority.translation_library._d_authority_to_str, "str_to_authority": _0_NamingAuthority.translation_library._d_str_to_authority, "qualified_name_to_str": _0_NamingAuthority.translation_library._d_qualified_name_to_str, "str_to_qualified_name": _0_NamingAuthority.translation_library._d_str_to_qualified_name}

translation_library._omni_skeleton = translation_library
_0_NamingAuthority__POA.translation_library = translation_library
del translation_library
__name__ = "NamingAuthority"

#
# End of module "NamingAuthority"
#
__name__ = "NamingAuthority_idl"

_exported_modules = ( "NamingAuthority", )

# The end.
