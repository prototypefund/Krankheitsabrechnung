
//File: NamingAuthority.idl

#ifndef _NAMING_AUTHORITY_IDL_
#define _NAMING_AUTHORITY_IDL_

//#include <orb.idl>

#pragma prefix "omg.org"

module NamingAuthority
{
        enum RegistrationAuthority {
                OTHER,
                ISO,
                DNS,
                IDL,
                DCE };
        
        typedef string NamingEntity;
        
        struct AuthorityId {
                RegistrationAuthority   authority;
                NamingEntity            naming_entity;
        };
        typedef string AuthorityIdStr;
        
        typedef string LocalName;
        struct QualifiedName {
                AuthorityId authority_id;
                LocalName local_name;
        };
        typedef string QualifiedNameStr;

        exception InvalidInput {};

        interface translation_library
        {
                AuthorityIdStr authority_to_str(
                                in AuthorityId authority )
                        raises(
                                InvalidInput );
                
                AuthorityId str_to_authority(
                                in AuthorityIdStr authority_str )
                        raises(
                                InvalidInput );
                
                QualifiedNameStr qualified_name_to_str(
                                in QualifiedName qualified_name )
                        raises(
                                InvalidInput );
                
                QualifiedName str_to_qualified_name(
                                in QualifiedNameStr qualified_name_str )
                        raises(
                                InvalidInput );
        };
};

#endif // _NAMING_AUTHORITY_IDL_


