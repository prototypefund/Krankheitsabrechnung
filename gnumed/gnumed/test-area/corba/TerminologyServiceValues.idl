
//File: TerminologyServiceValues.idl
//
#ifndef _TERMINOLOGY_SERVICE_VALUES_IDL_
#define _TERMINOLOGY_SERVICE_VALUES_IDL_

#pragma prefix "omg.org"
#include <orb.idl>
#include "AbbreviatedIncludes/NamingAuthority.idl"
#include "TerminologyServices.idl"

// ***************************************************************
//       module:  TerminologyServiceValues
// ***************************************************************

module TerminologyServiceValues {

typedef TerminologyServices::ConceptCode ConceptCode;
typedef NamingAuthority::QualifiedNameStr QualifiedNameStr;
typedef NamingAuthority::AuthorityIdStr AuthorityIdStr;

//****************************************************
//          ValueDomainId Strings
//*****************************************************
typedef QualifiedNameStr ValueDomainIdStr;

const ValueDomainIdStr  ASSOCIATION_VALUE_DOMAIN = 
		"IDL:omg.org/TerminologyService/AssociationId";
const ValueDomainIdStr	ASSOCIATION_QUALIFIER_VALUE_DOMAIN = 
		"IDL:omg.org/TerminologyService/AssociationQualifierId";
const ValueDomainIdStr	ASSOCIATION_BASE_TYPE_DOMAIN =
		"IDL:omg.org/TerminologyService/AssociationBaseTypeId";
const ValueDomainIdStr  LANGUAGE_VALUE_DOMAIN = 
		"IDL:omg.org/TerminologyService/LanguageId";
const ValueDomainIdStr	LEXICAL_TYPE_VALUE_DOMAIN =
		"IDL:omg.org/TerminologyService/LexicalTypeId";
const ValueDomainIdStr	PRESENTATION_FORMAT_VALUE_DOMAIN =
		"IDL:omg.org/TerminologyService/PresentationFormatId";
const ValueDomainIdStr  SOURCE_VALUE_DOMAIN = 
		"IDL:omg.org/TerminologyService/SourceId";
const ValueDomainIdStr	SOURCE_USAGE_DOMAIN =
		"IDL:omg.org/TerminologyService/SourceUsageId";
const ValueDomainIdStr  SYNTACTIC_TYPE_VALUE_DOMAIN = 
		"IDL:omg.org/TerminologyService/SyntacticTypeId";
const ValueDomainIdStr  USAGE_CONTEXT_VALUE_DOMAIN = 
		"IDL:omg.org/TerminologyService/UsageContextId";


//**********************************************************
//             AssociationId
//**********************************************************
typedef ConceptCode AssociationId;
const NamingAuthority::AuthorityIdStr ASSOCIATION_ID_AUTHORITY_STRING = 
		"IDL:org.omg/TerminologyService/Association/";

const AssociationId	IS_COMPOSED_OF = 
		"isComposedOf";
const AssociationId	HAS_SUBTYPES = 
		"hasSubtypes";
const AssociationId	REFERENCES = 
		"references";
const AssociationId	HAS_ATTRITUTES = 
		"hasAttributes";

//**********************************************************
//             AssociationBaseTypeId
//**********************************************************
typedef ConceptCode AssociationBaseTypeId;
const NamingAuthority::AuthorityIdStr ASSOCIATION_BASE_TYPE_ID_AUTHORITY_STRING = 
		"IDL:org.omg/TerminologyService/AssociationBaseType/";

const AssociationId	WHOLE_PART = 
		"wholepart";
const AssociationId	SUBTYPE = 
		"subtype";
const AssociationId	REFERENCE = 
		"reference";
const AssociationId	NON_SEMANTIC = 
		"nonSemantic";

//****************************************************
//          AssociationQualifierId Strings
//*****************************************************
typedef QualifiedNameStr AssociationQualifierIdStr;

const AssociationQualifierIdStr MANDATORY = 
		"IDL:omg.org/TerminologyService/AssociationQualifier/MAND";
const AssociationQualifierIdStr OPTIONAL = 
		"IDL:omg.org/TerminologyService/AssociationQualifier/OPT";
const AssociationQualifierIdStr SINGLE = 
		"IDL:omg.org/TerminologyService/AssociationQualifier/SING";
const AssociationQualifierIdStr PLURAL = 
		"IDL:omg.org/TerminologyService/AssociationQualifier/PLUR";

//****************************************************
//          LanguageIds
//*****************************************************
typedef ConceptCode LanguageId;

const NamingAuthority::AuthorityIdStr LANGUAGE_ID_AUTHORITY_STRING = 
		"DNS:usmarc.omg.org/041/";

const LanguageId DANISH =	"DAN";
const LanguageId ENGLISH =	"ENG";
const LanguageId FRENCH =	"FRE";
const LanguageId GERMAN =	"GER";
const LanguageId ITALIAN =	"ITA";
const LanguageId SPANISH =	"SPA";

//****************************************************
//          LexicalTypeIds
//*****************************************************

typedef QualifiedNameStr LexicalTypeIdStr;

const LexicalTypeIdStr ABBREVIATION =			"DNS:umls.hl7.omg.org/LT/ABB";
const LexicalTypeIdStr EMBEDDED_ABBREVIATION =	"DNS:umls.hl7.omg.org/LT/ABX";
const LexicalTypeIdStr ACRONYM =				"DNS:umls.hl7.omg.org/LT/ACR";
const LexicalTypeIdStr EMBEDDED_ACRONYM =		"DNS:umls.hl7.omg.org/LT/ACX";
const LexicalTypeIdStr EPONYM =				"DNS:umls.hl7.omg.org/LT/EPO";
const LexicalTypeIdStr LAB_NUMBER =			"DNS:umls.hl7.omg.org/LT/LAB";
const LexicalTypeIdStr PROPER_NAME =			"DNS:umls.hl7.omg.org/LT/NAM";
const LexicalTypeIdStr SPECIAL_TAG =			"DNS:umls.hl7.omg.org/LT/NON NO";
const LexicalTypeIdStr TRADE_NAME =			"DNS:umls.hl7.omg.org/LT/TRD";



//****************************************************
//          PresentationFormatIds
//*****************************************************
typedef ConceptCode PresentationFormatId;

const NamingAuthority::AuthorityIdStr PRESENTATION_FORMAT_AUTHORITY_STRING = 
			"DNS:omg.org/MIME/";

const PresentationFormatId PLAIN_TEXT =		"text/plain";
const PresentationFormatId RTF =			"application/rtf";
const PresentationFormatId ZIP =			"application/zip";
const PresentationFormatId PDF =			"application/pdf";
const PresentationFormatId GIF_IMAGE =		"image/gif";
const PresentationFormatId BASIC_AUDIO =	"audio/basic";


//******************************************************
//         SourceIds
//******************************************************

typedef QualifiedNameStr SourceIdStr;

//******************************************************
//         SourceUsageTypeId
//******************************************************

typedef QualifiedNameStr SourceUsageTypeIdStr;


//******************************************************
//         SyntacticType
//******************************************************

typedef ConceptCode SyntacticTypeId;

const NamingAuthority::AuthorityIdStr SYNTACTIC_TYPE_AUTHORITY_STRING =
		"DNS:umls.hl7.omg.org/STT";

const SyntacticTypeId CASE_DIFFERENCE = "C";
const SyntacticTypeId WORD_ORDER = "W";
const SyntacticTypeId SINGULAR_FORM = "S";
const SyntacticTypeId PLURAL_FORM = "P";

//****************************************************
//          Query Property Types
//*****************************************************
typedef string TerminologyServiceProperty;

const TerminologyServiceProperty LexicalTypeProperty = "LexicalTypeId";
const TerminologyServiceProperty AssociationProperty = "AssociationId";
const TerminologyServiceProperty PreferredTextProperty = "PreferredText";
const TerminologyServiceProperty DefinitionProperty = "Definition";
const TerminologyServiceProperty PresentationProperty = "PresentationId";

};
#endif /* _TERMINOLOGY_SERVICE_VALUES_IDL_ */
